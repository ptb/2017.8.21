* Mac Setup
:properties:
:header-args: :cache yes :comments org :padline yes :results silent
:header-args:sh: :shebang "#!/bin/sh" :tangle mac-setup.command
:end:
#+startup: showall nohideblocks hidestars indent

#+begin_quote
From zero to fully installed and configured, in an hour.
#+end_quote

** Overview

*** Quick Start

#+begin_example sh :tangle no
zsh

curl --location --silent \
  "https://github.com/ptb/2017.8.21/raw/master/mac-setup.command" | \
  source /dev/stdin 0
#+end_example

*** License

#+begin_quote :noweb-ref license.txt
Copyright 2017 [[https://github.com/ptb][Peter T Bosse II]]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#+end_quote

** Initialization

*** Initialize New Terminal
#+begin_src sh :noweb tangle
if test -z "${1}"; then
  osascript - "${0}" << EOF > /dev/null 2>&1
<<new-terminal.applescript>>
EOF
fi
#+end_src

**** =new-terminal.applescript=
#+begin_src applescript :noweb-ref new-terminal.applescript
    on run { _this }
      tell app "Terminal" to do script "source " & quoted form of _this & " 0"
    end run
#+end_src

*** Define Function =ask=
#+begin_src sh :noweb tangle
ask () {
  osascript - "${1}" "${2}" "${3}" << EOF 2> /dev/null
<<ask.applescript>>
EOF
}
#+end_src

**** =ask.applescript=
#+begin_src applescript :noweb-ref ask.applescript :tangle no
    on run { _title, _action, _default }
      tell app "System Events" to return text returned of (display dialog _title with title _title buttons { "Cancel", _action } default answer _default)
    end run
#+end_src

*** Define Function =run=
#+begin_src sh :noweb tangle
run () {
  osascript - "${1}" "${2}" "${3}" << EOF 2> /dev/null
<<run.applescript>>
EOF
}
#+end_src

**** =run.applescript=
#+begin_src applescript :noweb-ref run.applescript :tangle no
    on run { _title, _cancel, _action }
      tell app "System Events" to return button returned of (display dialog _title with title _title buttons { _cancel, _action } cancel button 1 default button 2 giving up after 5)
    end run
#+end_src

*** Define Function =init=
#+begin_src sh
if test -n "${1}"; then
  init () {
    init_sudo
    init_no_sleep
    init_hostname
    init_devtools "/Volumes/Install"
    init_updates
  }
  printf "\n$(which init)\n"
fi
#+end_src

*** Eliminate Prompts for Password
#+begin_src sh :var _sudo=_sudo[3:-2,0:1]

init_sudo () {
  sudo -v

  while true; do
    sudo -n true
    sleep 60
  done &

  printf "%b\n" "${_sudo}" | \
  while IFS="$(printf '%b' '\t')" read filename policy; do
    printf "%b\n" "${policy}" | \
    sudo tee "/etc/sudoers.d/${filename}" > /dev/null
  done
}
#+end_src

**** _sudo
#+name: _sudo
|-------------+--------------------------------------|
| Filename    | Policy                               |
|-------------+--------------------------------------|
| timeout     | Defaults:%admin timestamp_timeout=-1 |
| tty_tickets | Defaults:%admin !tty_tickets         |
|-------------+--------------------------------------|

*** Set Defaults for Sleep
#+begin_src sh
init_no_sleep () {
  sudo systemsetup -setcomputersleep "Never" > /dev/null
  sudo systemsetup -setharddisksleep "Never" > /dev/null
}
#+end_src

*** Set Hostname from DNS
#+begin_src sh
init_hostname () {
  h="$(hostname -s)"

  sudo systemsetup -setcomputername \
    "$(ruby -e "print '${h}'.capitalize")" > /dev/null
  sudo systemsetup -setlocalsubnetname "${h}" > /dev/null
}
#+end_src

*** Install Developer Tools
#+begin_src sh
init_devtools () {
  p="${1}/Command Line Tools (macOS High Sierra version 10.13).pkg"
  i="com.apple.pkg.CLTools_SDK_macOS1013"

  if test -f "${p}"; then
    if ! pkgutil --pkg-info "${i}" > /dev/null; then
      sudo installer -pkg "${p}" -target /
    fi
  else
    xcode-select --install
  fi
}
#+end_src

*** Install macOS Updates
#+begin_src sh
init_updates () {
  sudo softwareupdate --install --all
}
#+end_src

** Installation

*** Define Function =install_sw=
#+begin_src sh
if test -n "${1}"; then
  install_sw () {
    install_brew
    install_brewfile_taps
    install_brewfile_brew_pkgs
    install_brewfile_cask_args
    install_brewfile_cask_pkgs
  }
  printf "\n$(which install_sw)\n"
fi
#+end_src

*** Install Homebrew Package Manager
#+begin_src sh
install_brew () {
  if ! which brew > /dev/null; then
    ruby -e \
      "$(curl -Ls 'https://github.com/Homebrew/install/raw/master/install')"
    printf "" > "${BREWFILE}"
  fi
  brew analytics off
  brew update
  brew doctor
  brew tap "homebrew/bundle"
}
#+end_src

*** Add Homebrew Taps to Brewfile
#+begin_src sh :var _taps=_taps[3:-2,0]

install_brewfile_taps () {
  printf "%b\n" "${_taps}" | \
  while IFS="$(printf '%b' '\t')" read tap; do
    printf 'tap "%s"\n' "${tap}" >> "${BREWFILE}"
  done
  printf "\n" >> "${BREWFILE}"
}
#+end_src

**** _taps
#+name: _taps
|----------------------------+--------------------------------------------------------|
| Homebrew Tap Name          | Reference URL                                          |
|----------------------------+--------------------------------------------------------|
| caskroom/cask              | https://github.com/caskroom/homebrew-cask              |
| caskroom/fonts             | https://github.com/caskroom/homebrew-fonts             |
| caskroom/versions          | https://github.com/caskroom/homebrew-versions          |
| homebrew/bundle            | https://github.com/Homebrew/homebrew-bundle            |
| homebrew/command-not-found | https://github.com/Homebrew/homebrew-command-not-found |
| homebrew/nginx             | https://github.com/Homebrew/homebrew-nginx             |
| homebrew/php               | https://github.com/Homebrew/homebrew-php                                                       |
| homebrew/services          | https://github.com/Homebrew/homebrew-services          |
| ptb/custom                 | https://github.com/ptb/homebrew-custom                 |
| railwaycat/emacsmacport    | https://github.com/railwaycat/homebrew-emacsmacport    |
|----------------------------+--------------------------------------------------------|

*** Add Homebrew Packages to Brewfile
#+begin_src sh :var _pkgs=_pkgs[3:-2,0]

install_brewfile_brew_pkgs () {
  printf "%b\n" "${_pkgs}" | \
  while IFS="$(printf '%b' '\t')" read pkg; do
    printf 'brew "%s"\n' "${pkg}" >> "${BREWFILE}"
  done
  printf "\n" >> "${BREWFILE}"
}
#+end_src

**** _pkgs
#+name: _pkgs
|-----------------------+------------------------------------------|
| Homebrew Package Name | Reference URL                            |
|-----------------------+------------------------------------------|
| git                   | https://git-scm.com/                     |
| gnupg                 | https://www.gnupg.org/                   |
| mas                   | https://github.com/argon/mas             |
| nodenv                | https://github.com/nodenv/nodenv         |
| openssl               | https://www.openssl.org/                 |
| perl-build            | https://github.com/tokuhirom/Perl-Build  |
| php71                 | https://github.com/Homebrew/homebrew-php |
| pinentry-mac          | https://github.com/GPGTools/pinentry-mac |
| plenv                 | https://github.com/tokuhirom/plenv       |
| pyenv                 | https://github.com/pyenv/pyenv           |
| rbenv                 | https://github.com/rbenv/rbenv           |
| rsync                 | https://rsync.samba.org/                 |
| shellcheck            | https://github.com/koalaman/shellcheck   |
| vim                   | https://vim.sourceforge.io/              |
| zsh                   | https://www.zsh.org/                     |
|-----------------------+------------------------------------------|

*** Add Caskroom Options to Brewfile
#+begin_src sh :var _args=_args[3:8,0:1]

install_brewfile_cask_args () {
  printf 'cask_args \%s' "\n" >> "${BREWFILE}"
  printf "%b\n" "${_args}" | \
  while IFS="$(printf '%b' '\t')" read arg dir; do
    printf '  %s: "%s",\n' "${arg}" "${dir}" >> "${BREWFILE}"
  done
  sed -ie "$ s/,//" "${BREWFILE}"
  printf "\n" >> "${BREWFILE}"
}
#+end_src

**** _args
#+name: _args
|-----------------+--------------------------|
| Location        | Install Path             |
|-----------------+--------------------------|
| fontdir         | /Library/Fonts           |
| colorpickerdir  | /Library/ColorPickers    |
| input_methoddir | /Library/Input Methods   |
| prefpanedir     | /Library/PreferencePanes |
| qlplugindir     | /Library/QuickLook       |
| screen_saverdir | /Library/Screen Savers   |
|-----------------+--------------------------|

*** Add Homebrew Casks to Brewfile
#+begin_src sh :var _casks=_casks[3:-2,0]

install_brewfile_cask_pkgs () {
  printf "%b\n" "${_casks}" | \
  while IFS="$(printf '%b\n' '\t')" read cask; do
    printf 'cask "%s"\n' "${cask}" >> "${BREWFILE}"
  done
  printf "\n" >> "${BREWFILE}"
}
#+end_src

**** _casks
#+name: _casks
|--------------------------------------------------+---------------------------------------------------------------|
| Caskroom Package Name                            | Reference URL                                                 |
|--------------------------------------------------+---------------------------------------------------------------|
| java                                             | https://www.oracle.com/technetwork/java/javase/               |
| xquartz                                          | https://www.xquartz.org/                                      |
| adium                                            | https://www.adium.im/                                         |
| alfred                                           | https://www.alfredapp.com/                                    |
| arduino                                          | https://www.arduino.cc/                                       |
| atom                                             | https://atom.io/                                              |
| autodmg                                          | https://github.com/MagerValp/AutoDMG                          |
| bbedit                                           | https://www.barebones.com/products/bbedit/                    |
| caffeine                                         | http://lightheadsw.com/caffeine/                              |
| carbon-copy-cloner                               | https://bombich.com/                                          |
| charles                                          | https://www.charlesproxy.com/                                 |
| dash                                             | https://kapeli.com/dash                                       |
| docker-toolbox                                   | https://www.docker.com/products/docker-toolbox                |
| dropbox                                          | https://www.dropbox.com/                                      |
| duet                                             | https://www.duetdisplay.com/                                  |
| exifrenamer                                      | http://www.qdev.de/?location=mac/exifrenamer                  |
| firefox                                          | https://www.mozilla.org/firefox/                              |
| flux                                             | https://justgetflux.com/                                      |
| github-desktop                                   | https://desktop.github.com/                                   |
| gitup                                            | http://gitup.co/                                              |
| google-chrome                                    | https://www.google.com/chrome/                                |
| handbrake                                        | https://handbrake.fr/                                         |
| hermes                                           | http://hermesapp.org/                                         |
| imageoptim                                       | https://imageoptim.com/mac                                    |
| inkscape                                         | https://inkscape.org/                                         |
| integrity                                        | http://peacockmedia.software/mac/integrity/                   |
| istat-menus                                      | https://bjango.com/mac/istatmenus/                            |
| iterm2                                           | https://www.iterm2.com/                                                             |
| jubler                                           | http://www.jubler.org/                                        |
| little-snitch                                    | https://www.obdev.at/products/littlesnitch/                   |
| machg                                            | http://jasonfharris.com/machg/                                |
| makemkv                                          | https://www.makemkv.com/                                      |
| menubar-countdown                                | http://capablehands.net/menubarcountdown                      |
| meteorologist                                    | http://heat-meteo.sourceforge.net/                            |
| moom                                             | https://manytricks.com/moom/                                  |
| mp4tools                                         | http://www.emmgunn.com/mp4tools-home/                         |
| munki                                            | https://www.munki.org/munki/                                  |
| musicbrainz-picard                               | https://picard.musicbrainz.org/                               |
| namechanger                                      | https://mrrsoftware.com/namechanger/                          |
| nvalt                                            | http://brettterpstra.com/projects/nvalt/                      |
| nzbget                                           | https://nzbget.net/                                           |
| nzbvortex                                        | https://www.nzbvortex.com/                                    |
| openemu                                          | http://openemu.org/                                           |
| opera                                            | https://www.opera.com/                                        |
| pacifist                                         | https://www.charlessoft.com/                                  |
| platypus                                         | https://sveinbjorn.org/platypus                               |
| plex-media-server                                | https://www.plex.tv/                                          |
| qlstephen                                        | https://whomwah.github.io/qlstephen/                          |
| quitter                                          | https://marco.org/apps#quitter                                |
| rescuetime                                       | https://www.rescuetime.com/                                   |
| scrivener                                        | https://literatureandlatte.com/scrivener.php                  |
| sizeup                                           | https://www.irradiatedsoftware.com/sizeup/                    |
| sketch                                           | https://www.sketchapp.com/                                    |
| sketchup                                         | https://www.sketchup.com/                                     |
| skitch                                           | https://evernote.com/products/skitch                          |
| skype                                            | https://www.skype.com/                                        |
| slack                                            | https://slack.com/                                            |
| sonarr                                           | https://sonarr.tv/                                            |
| sonarr-menu                                      | https://github.com/jefbarn/Sonarr-Menu                        |
| sourcetree                                       | https://www.sourcetreeapp.com/                                |
| steermouse                                       | http://plentycom.jp/en/steermouse/                            |
| subler                                           | https://subler.org/                                           |
| sublime-text                                     | https://www.sublimetext.com/3                                 |
| the-unarchiver                                   | https://theunarchiver.com/                                    |
| time-sink                                        | https://manytricks.com/timesink/                              |
| torbrowser                                       | https://www.torproject.org/projects/torbrowser.html           |
| tower                                            | https://www.git-tower.com/                                    |
| unrarx                                           | http://www.unrarx.com/                                        |
| vimr                                             | http://vimr.org/                                              |
| vlc                                              | https://www.videolan.org/vlc/                                 |
| vmware-fusion                                    | https://www.vmware.com/products/fusion.html                   |
| wireshark                                        | https://www.wireshark.org/                                    |
| xld                                              | http://tmkk.undo.jp/xld/index_e.html                          |
| caskroom/fonts/font-inconsolata-lgc              | https://github.com/DeLaGuardo/Inconsolata-LGC                 |
| caskroom/fonts/font-skola-sans                   | https://www.behance.net/gallery/17504367/SkolaSans            |
| railwaycat/emacsmacport/emacs-mac-spacemacs-icon | https://github.com/railwaycat/homebrew-emacsmacport           |
|--------------------------------------------------+---------------------------------------------------------------|

** Configuration

*** Configure Z-Shell
#+begin_src sh :noweb tangle
config_zsh () {
  case $SHELL in
    (*zsh) ;;
    (*) chsh -s "$(which zsh)" ;;
  esac

  if test ! -f "/etc/zshenv"; then
    sudo tee /etc/zshenv << EOF > /dev/null
<<zshenv>>
EOF
  fi
}
#+end_src

**** =/etc/zshenv=
#+begin_src sh :noweb-ref zshenv :tangle no
#!/bin/sh

export ZDOTDIR="${HOME}/.zsh"

if test -d "/Volumes/Caches/Homebrew"; then
  export HOMEBREW_CACHE="/Volumes/Caches/Homebrew"
  export BREWFILE="/Volumes/Caches/Homebrew/Brewfile"
else
  export HOMEBREW_CACHE="${HOME}/Library/Caches/Homebrew"
  export BREWFILE="${HOME}/Library/Caches/Homebrew/Brewfile"
fi
#+end_src

#+begin_src sh
config_zsh
#+end_src
